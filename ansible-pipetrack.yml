---
- name: Deploy PipeTrack App
  hosts: webservers
  become: yes
  vars:
    docker_image: "my-pipetrack-app:latest"
    container_name: "pipetrack"
    container_port: 80
    host_port: 30080

  tasks:
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg-agent

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Pull PipeTrack Docker image
      docker_image:
        name: "{{ docker_image }}"
        source: pull

    - name: Stop existing container if running
      docker_container:
        name: "{{ container_name }}"
        state: stopped
      ignore_errors: yes

    - name: Remove existing container if exists
      docker_container:
        name: "{{ container_name }}"
        state: absent
      ignore_errors: yes

    - name: Run PipeTrack container
      docker_container:
        name: "{{ container_name }}"
        image: "{{ docker_image }}"
        state: started
        restart_policy: always
        published_ports:
          - "{{ host_port }}:{{ container_port }}"
